==========
2018-09-07
==========

Fontier Topics in Cyber-Physical Systems

Dr. Fanxin Kon




How to Read, Write, Present Papers
Nitin H. Vaidya

Summary
    - Use common sense
    - Learn from experience


Reading a Paper

Why read papers
    - So you know what's hapening
    - Aavoid reinventing the wheel
        * Does happen commonly, to many wheels already
    - Find interesting research topics

Why not to read papers
    - Cannot read everything
    - Should not read everything
    - Can suppress innovation
        * once you see solutions using a particular there, often hard to think differently

Read or not read, that is the question
    - Read, of course
    - Know what's important
    - Know what can be ignored

What to read
    - Major conferences
        * Journals are a few years behind, but still can be useful
    - Tech reports from active research groups
        * need to know which groups to look up
    - Survey / overview papers
        * ACM Computing Surveys
        * CACM, IEEE Computer, Spectrum
        * More technical - IEEE personal Communications, ...
        * newsletters - ACM SIGCOMM, ACM, SIGMOBILE, ACM SIGBED...

What's In a paper
    - Abstract
    - Introduction
    - Motivation
    - Problem description
    - Solution
    - ...
    - Performance Analysis
    - Conclusions
    - Future Work

How to read a paper
Know why you want to read the paper
    - To know what's going on (e.g. scanning proceedings)
        * title, authors, abstract
    - Papers in your broad research area
        * introduction, motivation, solution description, summary, conclusions
        * sometimes reading more details useful, but not always
    - Papers you may want to improve on
        * read entire paper carefully

What to note
    - Authors and research groups
        * need to know where to look for a paper on particular topic
    - Theme of the solution
        * should be able to go back to the paper if you need more info
    - Approach to performance evaluation
    - Note any shortcomings (Not reinventing wheels)

So this paper is in print
    - Be skeptical
    - If it sounds too good to be true, it often is


How to Write

How to write a paper
    - Do unto others as you would have them do unto you

How to write a paper
When you have truly exceptional results ex. P == NP
    - Probably doesn't matter how you write, people will read it anyway

How to write a paper
    - Most papers are not that exceptional
    - Good writing makes significaln difference
    - Better to say little clearly, than saying too much unclearly

Readability a must
    - If the paper is not readable, author has not given writing sufficient thought
    - Two kinds of referees
        * if I cannot understand the paper, it is the writer's fault
        * if I cannot understand the paper, I cannot critisize it

Do not irritate the reader
    - Define notation before use
    - No one is impressed anymore by Greek symbols
    - If you use much notation, make it easy to find
        * Summarize most notation in one place
    - Aviod using too many acronyms
    - You may know the acronyms well. Do not assume the reader does

How to write a theory paper
    - Unreadability is not the same as formalism
    - Reader should be able to understand contributions without reading all details
    - if some proofs are not too important, relegate them to an appendix

How to write a systems paper
    - Provide sufficient information to allow people to reproduce your results
        * people may want to reproduce exciting results
        * do not assume this won't happen to your paper
        * besides, referees expect the information
    - Do not provide wrong info
    - Sometimes hard to probide all details in available space
        * may be forced to omit some info
        * judge what is most essential to the experiments
        * cite a tech report for more info

Discuss related work
    - Explain how your work relates to state of the art
    - Discuss relevant past work by other people too
    - Remember, they may be reviewing your paper
        * Avoid: the scheme presented by Vaidya performs terrible
        * Prefer: The scheme by Vaidya does not perform as well in scenario X as it does in scenario Y
    - Avoid offending people, unless you must

Tell them your shortcomings
    - If your ideas do not work well in some interesting scenarios, tell the reader
    - People appreciate a balanced presentation

How to write weak results
    - If results are not that great, come up with better ones
    - Do not hide weak results behind bad writing
    - If you must publish: write well, but may have to go to second-best conference
    - If results not good enough for a decent conference, rething your problem/solution

Misc
    - Read some well-written papers
        * award-winning papers from conferences
    - Avoid long sentences
    - If you have nothing to say, say nothing
        * don't feel obliged to fill up space with useless text
        * if you must fill all available space, use more line spacing, greater margins, bigger font, bigger figures, anything but drivel
    
Technical Reports
    - Useful to get early




==========
2018-09-11
==========

How to Present

How to present a paper
    - Do unto others as you would have them do unto you

How to present a paper (at a conference)
    Objectives, in decreasing order of importance
    - Keep people awake and attentive
        * everything has been tried: play fiddle, cartoons, jokes
        * in most cases, extreme measures should not be needed
        * humor can help
    - Get the problem definition across
        * people in audience may not be working on your problem
    - Explain your general approach
        * most productive use of your time
    - Dirty details
        * most people in the audience probably do not care
        * a typical conference includes 30+ presentations

Talk outline or not?
    - Useful when several ideas discussed in a signle talk
    - Short talks: skip the outline
    - Long talks: include an outline
    - Make the outline interesting

Text
    You want people to (quickly) read your slides
    - Use big enough font
    - Do not put too mcuh on one slide
        * don't want to keep them busy reading, instead of listening
    - Use good colour schemes
    - Slide text need to be grammatically accurate
    - Keep it short
        * OK to omit some details
        * Fill them in when you present the paper
    Practice makes perfect
        vs
    Practice can improve your presentation

PowerPoint but not excessively
    - Everybody has used PowerPoint
    - No one is impressed

Picture is worth 1000 words
    - Use illustrations to explain complex algorithms
    - Omit minor details, focus on the improtant
    - They can read the paper to know the exact algorithm

How to present a paper
    - Avoid blocking the screen
    - Point to the screen, rather than the slide on the projector

How many slides
    - Depends on personal style
    - Rule of thumb
        * 1 slide for 1-2 min
        * Know you place
    - I tend to make more slide than I might need, and skip the not so important ones dynamically
    - Anticipate techinical questions, and prepare explanatory slides

How to present a paer
    - Practice makes perfect (or tolerable)
    - May need several trials to fit you talk to available time

ESL
    - Accent may not be easy to understand
    - Talk slowly
    - Easier said than done

No substitute for experience
    - Nothing like a terrible presentation to learn what not to do

Summary
    - Use common sens
    - Learn from experience
    - Enjoy
        * papers can be fun



Introduction to Cyber-Physical Systems

Embedded systems
    Computing systems designed for a specific purpose
    Predecessor to Cyber-physical systems
    They are everywhere

Embedded systems and the Market
    Quiz: What % of today's current CPU shipment if destined to PC?
    Answer: less than 1%
    In fact embedded processor shipments surpassed PCs back in 1988

Trend 1: Embedded systems are getting more complex
    - Modern cars hage over 100 processors
    - Increasing number of sensors, actuators, smart control, GUI
    - Intelligent data fusion

Ex: General automotive system
    - The number of ECUs has more than doubled in 10 years
        Many cars have more than 100 ECUs

Trend 2: Embedded systems are getting more connected
    - Command and control network - real time integration of vehicles, people, command
    - Geotagging
    - Many other ex
        * power grid
        * medical systems
        * transportation
        * etc

Ex: v2v and v2x
    - v2v: vehicle to vehicle
    - v2x vehicle to pedestrian, vehicle to road site unit, ...

CPS - The next Evolution
    - Integration fo computation with the physical process
    - Built on top of the embedded computing systems
    - Interaction with the physical environment is promoted to a "first class"
    - Promotes interaction and integration of subsystems
        * classic saftey-critical embedded systesm: black boxes
        * CPS: white-boxes, open protocols
    - Main goals:
        * co-design the cyber and physical part of the system
        * Engineer a "system of systems"

CPS applications
    - Several new application only possible thanks to the CPS revolution
    - Integrated operating room: seemingly connect medical devices, plug-and-play functionality
        - Currently: a cable mess
    - Smart power grid: predict and resposen to varying conditions in supply and demand of power
    - An often ignored requirement for sustainable energy...
    - Other application are an evoluto of existing systems
        * UAV
        * Autonomous Vehicles

System view of CPS
    Computation
        Cyber
    Communcation
        Systems
    Control
        Physical
    Computation
        :
(triangle)

Control View of CPS
    Cyber Space            ^->      Controller              -> v
                        Sensor                              Actuator
    Physical Space         ^<-      Physical system         <- v

CPS Requirements
    1. Saftey
        - all such systems interact with the environment
        - system failure can have catastrophic consequences
        - system correctness depends on both logical results and the time at whic results are produced (real-time)
    2. Performance
        - safety is #1 requirement, but we still need to achieve sufficient performance
        - many systems are resource constrained (in either weight, power, cost, etc)
    3. Interoperability (talking to each other)
        - Individual subsystems connected by open protocols
        - security can be an issue

Reliable CPS: not so much
    - In 2007, 12 F-22s were going from Hawaii to Japan
    - After crossing the IDL, all 12 experienced multible crashes
        - No nav
        - No fuel subsystems
        - Limited comms
        - Rebooting didn't help
    - F-22 has 1.7(?) mil line of code
    - Mercedes Class A failed the moose test in 97
    - Sensor on roof detect overturn and auto open door
    - What happens if a thief jumps on the car roof?

CPS Challenges - Safety
    - Safety is har to guarantee in interconnected and interdependent systems
    1. Do not trues communication channels
    2. Do not trust users
    3. Do not trust lower-critically subsystems
        * protect life-critical subsystems, make sure lower do not affect higher

CPS Challenges - Timing Predictability
    - The biggels architectural and system challenge
    - The lowest abstraction layer (transistors) is pretty deterministic - we know how to compute exast timings
    - However, higher levels loos all comcept of timing
        * Deep pipelining, caches, out-of-order and speculative execution...
        * Thread models, locking, interrupts...
    - This is fine for general purpose computing, but not for CPS - the physical system uses real time!
    - We need to ensure that computation always finishes within guarantee time windows -> we are interested in worst-case performance, not average performance!
    - Timing predictability
        * The time that the system requries to perform an poeration should exibit little variation
        * Such time should be easy to compute
        * It should not be affected by other parallel operations in the system.

CPS Challenge - Security
    - Interconnected systems are also open to attacks
    - Security can become a significant concern
        * Integrity & availability are often more important than confidentiality, but not always


Research Topics

Security In CPS

CPS security incidents
    Siberian pipeline: June 1982:
        - Soviets stole control software from Canadian company
        - UE influence Canadian company to alter code such that pipeline pressures would build up
        - Explosion could be sen from space
    Stuxnet: 2009
        - Attack on Iranian nuclear facility
        - Used 4 undiscovered exploits targeting control
    US drome captured: 2011
        - Iran caputred predator drone that landed in the wrong area
        - GPS spoofing
        - "System" worked perfectly
            * sensor measurements where wrong
    IoT DDoS: Oct 21, 2016
        - Thousands of devices overtaken using default passowrds
        - Organized into botnet to flood DNS provider
        - Took down many major websites

Typical CPS Architecture
    - Cyber attack surfaces
        * eg communication, netowrks, computors...
    - Environmental attack surfaces
        * eg GPS signal, electro-magnetic interference...
    - Physical attack surfaces
        * eg locks, casings, cables...
    - Human attack surfaces
        * eg phishing, blackmail ...

What is CPS security?
    - A CPS attack whose goal is to (negatively) affect the interaction between a CPS and the physical workd
        -- originates through any attack surface
    - CPS security concerns the development of technologies for defending against CPS attacks
        -- Discovering new vulnerailities
        -- Detecting CPS attacks
        -- Mitigating attack effects
        -- ...

Ex: Sensor Attacks
    Target: Sensor Attacks
    - The attacker can arbitrarily change sensor measurements
        * environmental attack surfaces
        * cyber attack surfaces
    Goal: Resilience
    - To ensure ....

Ideally...
    - Ideally the system performs (almost) the same as if there is not attack

How sensor attacks affect control?
    1. A sensor attack or fault occurs
    2. The input, ie estimation X, incorrectly reflects the system's physical state
    3. The output ie control input u is misled
    4. The actuator performs the misled actuation
    5. The physical system drifts off

Some Existing Approaches
    _ Approaches rely on sensor redundancy
        * multiple sensors (partially) measure the same physical variables
        * They limit the number of compromised sensors, eg less than half of the total number of sensors
    - CPS checkpointing and recovery
        * Ocasionally store estimates...

Review on CPS security?
    - CPS security concerns the development of technologies for defending against CPS attacks
        -- Discovering new vulnerailities
        -- Detecting CPS attacks
        -- Mitigating attack effects
        -- ...
    - The above example studies how to mitigate effects of sensor attacks
    - ...

Real-Time scheduling in CPS





==========
2018-09-14
==========

Real-Time Scheduling in CPS

Why real-time scheduling?
    - Computational tasks running in cyber components, eg processors such as electronic control units in a vehicle
    - We need to ensure that these computational tasks always finish within guarantee time windows
    - We are intersted in worst-case performance, not averate performance
    - ex: braking a car within 20ms, otherwise may cause accidents
    - It is challenging to make all tasks meet all deadlines!

Real-Time systems
    - The correctness of they system depends not only on the lovical result of the computation but also on the time at which the results are produced
    - A correct balue at the wrong time is a fault
    - Processes attempt to control or react to events that take place in the outside world
    - These events occur in 'real time' and tasks must be able to keep up with theim
    - Processed are associated with time constraints (deadlines)

Soft vs Hard real-time
    - Soft real-time: missing deadlines is undesireable, but will not lead to catastrphic consequences
        * Related to the concept of "Quality of service"
        * Typically interested in average-case response time (turnaround time)
        * ex media palyer, reservation systems, phones
    - Hard real-time: missing deadlines is not an option
        * Interested in worst-case response time
        * ex airplanes, nuclear plants, military systems 
        * However more on control performance later

Real-Time Spectrum
    No RT       <--     Soft RT     -->         Hard RT
    Computer simulation     User Interface      Internet video      Telecommunication       Military systems

Task Model
    - task: a real-time computation unit
        * Think of it as an execution thread with additional timing parameters (in particular: service time is known) 
        * The job of the real-time scheduler is to schedule tasks
    - Three main task models
        - Aperodic 
        - Perodic

Aperiodic Tasks
    - Event triggered computation
    - Task is activated by an external event
    - Task runs once to respond to the event
    - Relative deadline D: available time to respond to the  Event
    - ex event=press accelerator pedal

Perodic Task
    - Time triggered computation
    - task is activated periodically every T time units
    - Each periodic instance of the task is called a job
    - Each job has the same relative deadline (usually = to period)
    - ex most digital controllers
    - Sporadic Task:....

Utilization and Schedulability Analysis
    - task Utilization for a periodic/sporadic task: percentage of processor time required by the task
    - System Utilization: Percentage of processor time required by all tasks
    - Base uniprocessos scheduling result: task set is clearly not schedulable if: U > 1
    - For many scheduling algorithms, we can define a utilization bound U_b such that the taks set is schedulable if: U <= U_b

Other Details on the Analysis
    - For a scheduling algorithm to be useful, it must ve associated with a schedulability anaysis
    - Sufficient analysis: if analysis says YES, then task set is scheduable by the given algorithm. If the analysis says NO, we do not know
    - Necessary analysis: if analysis says NO, then we know that ther exists a valid scenario in which the task set misses a deadline
    - Offline analysis: task set is decided before the system starts. Run scheduability analysis on-line and admit new task only if all tasks can still meet deadlines

Ex: Uniprocessos Periodic Scheduling
    3 Main scheduling categories
        1. Table-based scheduling
            - Build a table that dictates when each task executes
            - Problem: Only works for periodic tasks
            - Problem: only works for off-line analysis
            - Sometimes the best choice for more complex task models
        2. fixed-priority scheduling
            - Each task is assigned a fixed priority
        3. Dynamic-priority scheduling
            - Task Priority varies at run-time (ex each job of the task has a different priority
    Scheduler is typically preeemptive - better system utilization

Rate-Monotonic Scheduling
    - Fixed-priority scheduling algorithm
    - Assumes periodic or sporadic tasks with D_i = T_i on a uniprocessos
    - Assigms priorities to tasks on the basis of their periods: shorter period = higher priority
    - Liu and Layland scheduability analysis: taks set is scheduable if: ...
    ...

RM ex
    - Worst case respose time is produced when a
U_b(2) ~= 0.828
U <= U_b(N) = N(2^(1/N)-1)
    where N is # of tasks

Earliest-Deadline First 
    - Dynamic-priority scheduling algorithm
    - Task Priority is inversely proportional to its current absolute deadline
    - Assumes periodic or sporiadic tasts with D_i = T_i on a uniprocessor, then...
    - Schedulability analysis: the task set is schedulable if: U <= U_b = 1
    ...
(Larger deadline)

EDF ex


Scheduling on Multiprocessor
    - Two solutions for scheduling real-time tasks on multiprocessors
    - Solution 1: Partitoning
        - Statistically assign tasks among M processors
        - EX: EDF each core is schedulable if sum of utilizations of tasks assigmed to that core <= 1
        - Problem can be rephrased as: given a set of objects with known sizes (task utilizations), place them into M equal size containers
        - Classic bin-packing problem -- NP-hard
    - Solution 2: Global Scheduling
        - Keep a global scheduling queue
        - Whenever there is a free core, pick one task from the queue and schedule it on the core
    - In practice, real-time adoption of multiprocessos is limited, especially for hard systems
    - Partitioned scheduling is preferred -- three issues with global scheduling
        - Increases unpredictability -- tasks can migrate among cores
        - Much more complex to implement
        - Does not necessarily perform better than partitioned



Sensor Fusion in CPS

Motivation
    - Each sensor has its strengths and weaknesses
    - One sensor is never sufficiend for...
    ...

Sensor Fusion - Brief Definition
    - The essence of ....

Ex: Autonomous Cars
    Civil Maps Block Diagram

IMUs work im part by detecting changes in pitch, roll, and yaw



Energy / Power CPS

Ex: Smart Grid

Intro
    - Simply means a 'smarter' power grid
    - A smarter grid with improved efficiency and two way communication
    - Reducing carbon emmissions as it is integrated with renewable energy resources
    - A Network created through IT, communication technology and Electrical Power system
    - Can handle digital, computerized equipment and technology dependent on it and can automate and manage ....

Comparison
    Smart grid remote control operation vs traditionally manual
    Smart grid add distributed generation of power
    Emart grid power flow control should be extensive

Features of Smart Grid:
    Smart Home
        - new equipment, appliances, and softwawre are available that use emerging Smart Grid technologies to save energy, 
            seek out the lowest rates, and contribute to the smooth and efficient functioning of our electric grid
    Integration of Renewable energy
        - It will give grid operators new tools to reduce power demand quickly when wind or solar power dips
        - It will have more energy storage capabilities to absorb excess wind ans solar power when it isn't needed then ...
        ...
    Consumer Engagement
        - offers many pooprtunities for cosumers to save energy...
        ...
    Grid Operation Centres
        - Primary task of grid is to make sure that a much power is generated as is being used
        - Otherise grid can become unstable 
        - Grid operators also have limited info about how the power is flowing through the grid
        - Smar grid techmologies offer a new solution to the problem of monitoring and controlling the grid's transmission system
        - Reducing the need to fire up costly secondary plants
        - Grid oerators can see and manage electricity consumption in real time
        - Software could ...
        ...
    Distribution Intelligence
        - It refers to the part of the Smart Grid that applies to the utility distribution System, that is the wires, switches. and transformers that connect the utility substation to you
        ...
    Plug-in Electric Vehicles
        - For the smart grid, plug-in electric behicles represent a broader technology know as energy storage
        - PVEs can drastically reduce our dependance on oil, and they emit now air pollutantis when running in all-electric models. Howe...

Smart Grid Components
    Smart Meters
        - Recognizes and details electrical consumption
        - Relays info to central monitoring station
        - Will replace traditional meters
        - Power outage notification and power quality monitoring
        ...
    Phasor Measurement
        - Measure AC current waveforms
        - Monitors power quality
        - Wide area measurement system
            - Provides real-time data
            ...
        ...
    Information Transfer
        - Two way communication
        - ...
    Distributed Generation
        - Allow the connection of small scale renewable genreation
            - Solar, wind, fuel cells, microturbines
        - Generation close to the load, improving efficiency
        - Customer interaction
        - Increased reliability

Smart Grid Benefits
    - Efficiency
    - Reliability
    - Environment

Drawbacks
    - Security and privacy
    - Some types of meters can be hacked, these hackers:
        - Gain control of thousand, even millions of meters
        ...
    ...




==========
2018-09-18
==========

Unsupervised Machine Learning Based Anomaly Detection in CPS

Anomaly Detection in CPS
    Anomally: a deviation from nominal behavior of a dynamic system
        - Nominal/off-nominal (anomalous) conditions
    Anomally in CPS:
        - eg physical faluts, cyber attacks
        - types: local, system wide
        - Problem: strong subsystems connectivity 
            -> vulnerable to catastrophic faults propagation
            -> efficiency? robustness? resilience?

Anomaly Detection Methods
    - Rule-based methods
        * rely on domain knowledge
        * need calibation & validation
        * example: temp & humi sensors at dew point
    - Data-driven methods (supervised)
        - lack of training data <- anomalies as low prob. events
        - information disparity in CPS:
            continuous(physical world) vs event-driven(cyber world)

Key Ideas
    Unsupervised Learning:
        - Using nominal data for training
    Symbolization:
        - representing different types of data uniformly
    RBM free energy distribution as determiner:
        - RBM: Restrict Boltzmann Machine
        - High Free energy -> lo probability -> anomaly
    Spato-temporal graphical modeling
        - Spatio-temporal pater network (STPN)
            (for capturing patterns of system-wide dynamic behaviors)

Model Explained
    Divided by two parts
        Training
            Accepts data of normal state
            2d matrix
            first? step symbolization
            third part, try to learn the pattern of how the system works normally
            Then break it down into samples
            compare the normal pattern with the subsequence(small bit)
            Then use this data as training results
        Testing
            Everytime we get a time series of the system
            Break down time series in to many subsequences
            Check the new subsequences to see how they fit

Symbolization /partitoning
    For a system of f - subsystems:
        input: system wide time series (under nominal condition if for training
        output: D-order Markov chain
        Methods: uniform partitioning (UP)

STPN model (W_D)
    Spatio-temporal pattern network (STPN)
        A set of 4-touple: For each pair of subsystems a,b <= F)
            Q^a: states set of a
            Epsilon^b: alphabet set of B

        Each node represents a subsystem
        Each edge represents a relationship
        
STPN Ex
    Has 2 subsystems
    Each symbol represents a state

Subsequences -> RBM Input
    Subsequence S~
        Subset of S in a given time window
    Process
        Compute each Lambda^(AB)(S~), for all a,b <+ F, through a model-inference process (omit)
        Normalize all results and convert to 1s and 0s, resulting in a binary vector of size f^2
        Taking this vector as a trining/test instance

Training RBM
    Restricted Boltzmann Machine (RBM)
    Training process: optimal weights, biases -> minimized free energy (maximized likelyhood of nominal conditions)

Finding an ANomaly (Testng phaze)
    Test data preparation
    Output as free energy distribution
    Kullback-Libler Distance (KL) is used for distinguished anomalies from nominal modes
        Distance(P,Q) = KL(P||Q)+KL(Q||P)...
        ...

Evaluation
    Left: lower free energy
    Right: higher free energy

Discussion
    Characteristics and performance
        Unsupervised training with nominal data
        spatio-temporal pattern for dynamic system behaviors
        supporting multiple nominal modes
        capturing both local and global anomalies
        supporting multiple types of data (Vital to CPS)
        robust to persistent anomalies (transient ones not tested)
    Further Research directons
        More complex learning technique eg stacked RBM
        root-caused analysis of anomalies
        detecting multiple simulataneous anomalies





Attack-Resilient Sensor Fusion for Safety-Critical CPS

Overview
    How a attacker can compromize a subset of these sensors
    algorithm that Combines data recieved 
    ...

Intro
    Ensuring saftey is important
    data comes from the shared bus to fusion algorithm and sent to the controller
    any of the nodes that interact with the environment can be compremized to send faulty data
    not just about sequental data, but also what time it's sent
    provide time slots to each of these modules
    Abstract
    Probabilistic
    Must ensure that the working sensors don't affect the faulty sensor
    Abstract model where each sensor provides interval of possible values
    Do not merge data with faulty data
    sensor provides controller with a single segment combine the values and take an average
    Precision gets hampered if the timeslot for fusion interval is too big
    
Precise formulations of the problems addressed in this work
    Increase systems durability to attacks

System Model
    Sensor is correct if its interval contains the true value

Fusion Algorithm
    input of the fusion intervals...
    If any fusion interval contains a faulty signal, a flag is thrown

Attack Model
    Attack Goals
        Land Shark
            unmanned drone vehicle
            possible to spoof some of the measurements without physical access to the vehicle
        RQ-170
            Captured in Iran
            captured through a jammed GPS signal, showing that sensor attacka are a valid threat for autonomous CPS
    Attack Means
        Phsycal Attaks
            Not always possible as sensors can be attached to other platforms and cannot be compramized without affecting critical components
        Cyber Attaks
            Not always possible b/c finding bugs in code or replacing the software require lots of effort
    Assumptions
        Number of compromised sensors is < n/2, and the number of sensors is greater than the # of compromised sensors
        Worse case scenairo, unlimited computation power
        Can't change the sensor interval, but can affect the fusion interval
        
Problems
    How does the order affect the performance of the attacker
    Make use of the past values and map it to the present values to protect against attack

Model of the attacker and present worst case results with respect to size of fusion intervals

Attack Strategies
    Constraint Stay undetected
        Passive mode: not yet transmitting data, limited impact
        Actice, no constraints on placement of intervals, great impact
    
    Begins in passive mode
    computes the intersection of all the seen measurements including his own compromised sensor, cannot say if he can affect other sensors
    When in passive, must include...
    Switch to active mode
    n is total number of sensors
    f is number of sensors that are under his attack
    number of transmitted info ...
    not constrained as long as the fusion interval overlaps




