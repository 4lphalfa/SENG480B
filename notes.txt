==========
2018-09-07
==========

Fontier Topics in Cyber-Physical Systems

Dr. Fanxin Kon




How to Read, Write, Present Papers
Nitin H. Vaidya

Summary
    - Use common sense
    - Learn from experience


Reading a Paper

Why read papers
    - So you know what's hapening
    - Aavoid reinventing the wheel
        * Does happen commonly, to many wheels already
    - Find interesting research topics

Why not to read papers
    - Cannot read everything
    - Should not read everything
    - Can suppress innovation
        * once you see solutions using a particular there, often hard to think differently

Read or not read, that is the question
    - Read, of course
    - Know what's important
    - Know what can be ignored

What to read
    - Major conferences
        * Journals are a few years behind, but still can be useful
    - Tech reports from active research groups
        * need to know which groups to look up
    - Survey / overview papers
        * ACM Computing Surveys
        * CACM, IEEE Computer, Spectrum
        * More technical - IEEE personal Communications, ...
        * newsletters - ACM SIGCOMM, ACM, SIGMOBILE, ACM SIGBED...

What's In a paper
    - Abstract
    - Introduction
    - Motivation
    - Problem description
    - Solution
    - ...
    - Performance Analysis
    - Conclusions
    - Future Work

How to read a paper
Know why you want to read the paper
    - To know what's going on (e.g. scanning proceedings)
        * title, authors, abstract
    - Papers in your broad research area
        * introduction, motivation, solution description, summary, conclusions
        * sometimes reading more details useful, but not always
    - Papers you may want to improve on
        * read entire paper carefully

What to note
    - Authors and research groups
        * need to know where to look for a paper on particular topic
    - Theme of the solution
        * should be able to go back to the paper if you need more info
    - Approach to performance evaluation
    - Note any shortcomings (Not reinventing wheels)

So this paper is in print
    - Be skeptical
    - If it sounds too good to be true, it often is


How to Write

How to write a paper
    - Do unto others as you would have them do unto you

How to write a paper
When you have truly exceptional results ex. P == NP
    - Probably doesn't matter how you write, people will read it anyway

How to write a paper
    - Most papers are not that exceptional
    - Good writing makes significaln difference
    - Better to say little clearly, than saying too much unclearly

Readability a must
    - If the paper is not readable, author has not given writing sufficient thought
    - Two kinds of referees
        * if I cannot understand the paper, it is the writer's fault
        * if I cannot understand the paper, I cannot critisize it

Do not irritate the reader
    - Define notation before use
    - No one is impressed anymore by Greek symbols
    - If you use much notation, make it easy to find
        * Summarize most notation in one place
    - Aviod using too many acronyms
    - You may know the acronyms well. Do not assume the reader does

How to write a theory paper
    - Unreadability is not the same as formalism
    - Reader should be able to understand contributions without reading all details
    - if some proofs are not too important, relegate them to an appendix

How to write a systems paper
    - Provide sufficient information to allow people to reproduce your results
        * people may want to reproduce exciting results
        * do not assume this won't happen to your paper
        * besides, referees expect the information
    - Do not provide wrong info
    - Sometimes hard to probide all details in available space
        * may be forced to omit some info
        * judge what is most essential to the experiments
        * cite a tech report for more info

Discuss related work
    - Explain how your work relates to state of the art
    - Discuss relevant past work by other people too
    - Remember, they may be reviewing your paper
        * Avoid: the scheme presented by Vaidya performs terrible
        * Prefer: The scheme by Vaidya does not perform as well in scenario X as it does in scenario Y
    - Avoid offending people, unless you must

Tell them your shortcomings
    - If your ideas do not work well in some interesting scenarios, tell the reader
    - People appreciate a balanced presentation

How to write weak results
    - If results are not that great, come up with better ones
    - Do not hide weak results behind bad writing
    - If you must publish: write well, but may have to go to second-best conference
    - If results not good enough for a decent conference, rething your problem/solution

Misc
    - Read some well-written papers
        * award-winning papers from conferences
    - Avoid long sentences
    - If you have nothing to say, say nothing
        * don't feel obliged to fill up space with useless text
        * if you must fill all available space, use more line spacing, greater margins, bigger font, bigger figures, anything but drivel
    
Technical Reports
    - Useful to get early




==========
2018-09-11
==========

How to Present

How to present a paper
    - Do unto others as you would have them do unto you

How to present a paper (at a conference)
    Objectives, in decreasing order of importance
    - Keep people awake and attentive
        * everything has been tried: play fiddle, cartoons, jokes
        * in most cases, extreme measures should not be needed
        * humor can help
    - Get the problem definition across
        * people in audience may not be working on your problem
    - Explain your general approach
        * most productive use of your time
    - Dirty details
        * most people in the audience probably do not care
        * a typical conference includes 30+ presentations

Talk outline or not?
    - Useful when several ideas discussed in a signle talk
    - Short talks: skip the outline
    - Long talks: include an outline
    - Make the outline interesting

Text
    You want people to (quickly) read your slides
    - Use big enough font
    - Do not put too mcuh on one slide
        * don't want to keep them busy reading, instead of listening
    - Use good colour schemes
    - Slide text need to be grammatically accurate
    - Keep it short
        * OK to omit some details
        * Fill them in when you present the paper
    Practice makes perfect
        vs
    Practice can improve your presentation

PowerPoint but not excessively
    - Everybody has used PowerPoint
    - No one is impressed

Picture is worth 1000 words
    - Use illustrations to explain complex algorithms
    - Omit minor details, focus on the improtant
    - They can read the paper to know the exact algorithm

How to present a paper
    - Avoid blocking the screen
    - Point to the screen, rather than the slide on the projector

How many slides
    - Depends on personal style
    - Rule of thumb
        * 1 slide for 1-2 min
        * Know you place
    - I tend to make more slide than I might need, and skip the not so important ones dynamically
    - Anticipate techinical questions, and prepare explanatory slides

How to present a paer
    - Practice makes perfect (or tolerable)
    - May need several trials to fit you talk to available time

ESL
    - Accent may not be easy to understand
    - Talk slowly
    - Easier said than done

No substitute for experience
    - Nothing like a terrible presentation to learn what not to do

Summary
    - Use common sens
    - Learn from experience
    - Enjoy
        * papers can be fun



Introduction to Cyber-Physical Systems

Embedded systems
    Computing systems designed for a specific purpose
    Predecessor to Cyber-physical systems
    They are everywhere

Embedded systems and the Market
    Quiz: What % of today's current CPU shipment if destined to PC?
    Answer: less than 1%
    In fact embedded processor shipments surpassed PCs back in 1988

Trend 1: Embedded systems are getting more complex
    - Modern cars hage over 100 processors
    - Increasing number of sensors, actuators, smart control, GUI
    - Intelligent data fusion

Ex: General automotive system
    - The number of ECUs has more than doubled in 10 years
        Many cars have more than 100 ECUs

Trend 2: Embedded systems are getting more connected
    - Command and control network - real time integration of vehicles, people, command
    - Geotagging
    - Many other ex
        * power grid
        * medical systems
        * transportation
        * etc

Ex: v2v and v2x
    - v2v: vehicle to vehicle
    - v2x vehicle to pedestrian, vehicle to road site unit, ...

CPS - The next Evolution
    - Integration fo computation with the physical process
    - Built on top of the embedded computing systems
    - Interaction with the physical environment is promoted to a "first class"
    - Promotes interaction and integration of subsystems
        * classic saftey-critical embedded systesm: black boxes
        * CPS: white-boxes, open protocols
    - Main goals:
        * co-design the cyber and physical part of the system
        * Engineer a "system of systems"

CPS applications
    - Several new application only possible thanks to the CPS revolution
    - Integrated operating room: seemingly connect medical devices, plug-and-play functionality
        - Currently: a cable mess
    - Smart power grid: predict and resposen to varying conditions in supply and demand of power
    - An often ignored requirement for sustainable energy...
    - Other application are an evoluto of existing systems
        * UAV
        * Autonomous Vehicles

System view of CPS
    Computation
        Cyber
    Communcation
        Systems
    Control
        Physical
    Computation
        :
(triangle)

Control View of CPS
    Cyber Space            ^->      Controller              -> v
                        Sensor                              Actuator
    Physical Space         ^<-      Physical system         <- v

CPS Requirements
    1. Saftey
        - all such systems interact with the environment
        - system failure can have catastrophic consequences
        - system correctness depends on both logical results and the time at whic results are produced (real-time)
    2. Performance
        - safety is #1 requirement, but we still need to achieve sufficient performance
        - many systems are resource constrained (in either weight, power, cost, etc)
    3. Interoperability (talking to each other)
        - Individual subsystems connected by open protocols
        - security can be an issue

Reliable CPS: not so much
    - In 2007, 12 F-22s were going from Hawaii to Japan
    - After crossing the IDL, all 12 experienced multible crashes
        - No nav
        - No fuel subsystems
        - Limited comms
        - Rebooting didn't help
    - F-22 has 1.7(?) mil line of code
    - Mercedes Class A failed the moose test in 97
    - Sensor on roof detect overturn and auto open door
    - What happens if a thief jumps on the car roof?

CPS Challenges - Safety
    - Safety is har to guarantee in interconnected and interdependent systems
    1. Do not trues communication channels
    2. Do not trust users
    3. Do not trust lower-critically subsystems
        * protect life-critical subsystems, make sure lower do not affect higher

CPS Challenges - Timing Predictability
    - The biggels architectural and system challenge
    - The lowest abstraction layer (transistors) is pretty deterministic - we know how to compute exast timings
    - However, higher levels loos all comcept of timing
        * Deep pipelining, caches, out-of-order and speculative execution...
        * Thread models, locking, interrupts...
    - This is fine for general purpose computing, but not for CPS - the physical system uses real time!
    - We need to ensure that computation always finishes within guarantee time windows -> we are interested in worst-case performance, not average performance!
    - Timing predictability
        * The time that the system requries to perform an poeration should exibit little variation
        * Such time should be easy to compute
        * It should not be affected by other parallel operations in the system.

CPS Challenge - Security
    - Interconnected systems are also open to attacks
    - Security can become a significant concern
        * Integrity & availability are often more important than confidentiality, but not always


Research Topics

Security In CPS

CPS security incidents
    Siberian pipeline: June 1982:
        - Soviets stole control software from Canadian company
        - UE influence Canadian company to alter code such that pipeline pressures would build up
        - Explosion could be sen from space
    Stuxnet: 2009
        - Attack on Iranian nuclear facility
        - Used 4 undiscovered exploits targeting control
    US drome captured: 2011
        - Iran caputred predator drone that landed in the wrong area
        - GPS spoofing
        - "System" worked perfectly
            * sensor measurements where wrong
    IoT DDoS: Oct 21, 2016
        - Thousands of devices overtaken using default passowrds
        - Organized into botnet to flood DNS provider
        - Took down many major websites

Typical CPS Architecture
    - Cyber attack surfaces
        * eg communication, netowrks, computors...
    - Environmental attack surfaces
        * eg GPS signal, electro-magnetic interference...
    - Physical attack surfaces
        * eg locks, casings, cables...
    - Human attack surfaces
        * eg phishing, blackmail ...

What is CPS security?
    - A CPS attack whose goal is to (negatively) affect the interaction between a CPS and the physical workd
        -- originates through any attack surface
    - CPS security concerns the development of technologies for defending against CPS attacks
        -- Discovering new vulnerailities
        -- Detecting CPS attacks
        -- Mitigating attack effects
        -- ...

Ex: Sensor Attacks
    Target: Sensor Attacks
    - The attacker can arbitrarily change sensor measurements
        * environmental attack surfaces
        * cyber attack surfaces
    Goal: Resilience
    - To ensure ....

Ideally...
    - Ideally the system performs (almost) the same as if there is not attack

How sensor attacks affect control?
    1. A sensor attack or fault occurs
    2. The input, ie estimation X, incorrectly reflects the system's physical state
    3. The output ie control input u is misled
    4. The actuator performs the misled actuation
    5. The physical system drifts off

Some Existing Approaches
    _ Approaches rely on sensor redundancy
        * multiple sensors (partially) measure the same physical variables
        * They limit the number of compromised sensors, eg less than half of the total number of sensors
    - CPS checkpointing and recovery
        * Ocasionally store estimates...

Review on CPS security?
    - CPS security concerns the development of technologies for defending against CPS attacks
        -- Discovering new vulnerailities
        -- Detecting CPS attacks
        -- Mitigating attack effects
        -- ...
    - The above example studies how to mitigate effects of sensor attacks
    - ...

Real-Time scheduling in CPS





==========
2018-09-14
==========

Real-Time Scheduling in CPS

Why real-time scheduling?
    - Computational tasks running in cyber components, eg processors such as electronic control units in a vehicle
    - We need to ensure that these computational tasks always finish within guarantee time windows
    - We are intersted in worst-case performance, not averate performance
    - ex: braking a car within 20ms, otherwise may cause accidents
    - It is challenging to make all tasks meet all deadlines!

Real-Time systems
    - The correctness of they system depends not only on the lovical result of the computation but also on the time at which the results are produced
    - A correct balue at the wrong time is a fault
    - Processes attempt to control or react to events that take place in the outside world
    - These events occur in 'real time' and tasks must be able to keep up with theim
    - Processed are associated with time constraints (deadlines)

Soft vs Hard real-time
    - Soft real-time: missing deadlines is undesireable, but will not lead to catastrphic consequences
        * Related to the concept of "Quality of service"
        * Typically interested in average-case response time (turnaround time)
        * ex media palyer, reservation systems, phones
    - Hard real-time: missing deadlines is not an option
        * Interested in worst-case response time
        * ex airplanes, nuclear plants, military systems 
        * However more on control performance later

Real-Time Spectrum
    No RT       <--     Soft RT     -->         Hard RT
    Computer simulation     User Interface      Internet video      Telecommunication       Military systems

Task Model
    - task: a real-time computation unit
        * Think of it as an execution thread with additional timing parameters (in particular: service time is known) 
        * The job of the real-time scheduler is to schedule tasks
    - Three main task models
        - Aperodic 
        - Perodic

Aperiodic Tasks
    - Event triggered computation
    - Task is activated by an external event
    - Task runs once to respond to the event
    - Relative deadline D: available time to respond to the  Event
    - ex event=press accelerator pedal

Perodic Task
    - Time triggered computation
    - task is activated periodically every T time units
    - Each periodic instance of the task is called a job
    - Each job has the same relative deadline (usually = to period)
    - ex most digital controllers
    - Sporadic Task:....

Utilization and Schedulability Analysis
    - task Utilization for a periodic/sporadic task: percentage of processor time required by the task
    - System Utilization: Percentage of processor time required by all tasks
    - Base uniprocessos scheduling result: task set is clearly not schedulable if: U > 1
    - For many scheduling algorithms, we can define a utilization bound U_b such that the taks set is schedulable if: U <= U_b

Other Details on the Analysis
    - For a scheduling algorithm to be useful, it must ve associated with a schedulability anaysis
    - Sufficient analysis: if analysis says YES, then task set is scheduable by the given algorithm. If the analysis says NO, we do not know
    - Necessary analysis: if analysis says NO, then we know that ther exists a valid scenario in which the task set misses a deadline
    - Offline analysis: task set is decided before the system starts. Run scheduability analysis on-line and admit new task only if all tasks can still meet deadlines

Ex: Uniprocessos Periodic Scheduling
    3 Main scheduling categories
        1. Table-based scheduling
            - Build a table that dictates when each task executes
            - Problem: Only works for periodic tasks
            - Problem: only works for off-line analysis
            - Sometimes the best choice for more complex task models
        2. fixed-priority scheduling
            - Each task is assigned a fixed priority
        3. Dynamic-priority scheduling
            - Task Priority varies at run-time (ex each job of the task has a different priority
    Scheduler is typically preeemptive - better system utilization

Rate-Monotonic Scheduling
    - Fixed-priority scheduling algorithm
    - Assumes periodic or sporadic tasks with D_i = T_i on a uniprocessos
    - Assigms priorities to tasks on the basis of their periods: shorter period = higher priority
    - Liu and Layland scheduability analysis: taks set is scheduable if: ...
    ...

RM ex
    - Worst case respose time is produced when a
U_b(2) ~= 0.828
U <= U_b(N) = N(2^(1/N)-1)
    where N is # of tasks

Earliest-Deadline First 
    - Dynamic-priority scheduling algorithm
    - Task Priority is inversely proportional to its current absolute deadline
    - Assumes periodic or sporiadic tasts with D_i = T_i on a uniprocessor, then...
    - Schedulability analysis: the task set is schedulable if: U <= U_b = 1
    ...
(Larger deadline)

EDF ex


Scheduling on Multiprocessor
    - Two solutions for scheduling real-time tasks on multiprocessors
    - Solution 1: Partitoning
        - Statistically assign tasks among M processors
        - EX: EDF each core is schedulable if sum of utilizations of tasks assigmed to that core <= 1
        - Problem can be rephrased as: given a set of objects with known sizes (task utilizations), place them into M equal size containers
        - Classic bin-packing problem -- NP-hard
    - Solution 2: Global Scheduling
        - Keep a global scheduling queue
        - Whenever there is a free core, pick one task from the queue and schedule it on the core
    - In practice, real-time adoption of multiprocessos is limited, especially for hard systems
    - Partitioned scheduling is preferred -- three issues with global scheduling
        - Increases unpredictability -- tasks can migrate among cores
        - Much more complex to implement
        - Does not necessarily perform better than partitioned



Sensor Fusion in CPS

Motivation
    - Each sensor has its strengths and weaknesses
    - One sensor is never sufficiend for...
    ...

Sensor Fusion - Brief Definition
    - The essence of ....

Ex: Autonomous Cars
    Civil Maps Block Diagram

IMUs work im part by detecting changes in pitch, roll, and yaw



Energy / Power CPS

Ex: Smart Grid

Intro
    - Simply means a 'smarter' power grid
    - A smarter grid with improved efficiency and two way communication
    - Reducing carbon emmissions as it is integrated with renewable energy resources
    - A Network created through IT, communication technology and Electrical Power system
    - Can handle digital, computerized equipment and technology dependent on it and can automate and manage ....

Comparison
    Smart grid remote control operation vs traditionally manual
    Smart grid add distributed generation of power
    Emart grid power flow control should be extensive

Features of Smart Grid:
    Smart Home
        - new equipment, appliances, and softwawre are available that use emerging Smart Grid technologies to save energy, 
            seek out the lowest rates, and contribute to the smooth and efficient functioning of our electric grid
    Integration of Renewable energy
        - It will give grid operators new tools to reduce power demand quickly when wind or solar power dips
        - It will have more energy storage capabilities to absorb excess wind ans solar power when it isn't needed then ...
        ...
    Consumer Engagement
        - offers many pooprtunities for cosumers to save energy...
        ...
    Grid Operation Centres
        - Primary task of grid is to make sure that a much power is generated as is being used
        - Otherise grid can become unstable 
        - Grid operators also have limited info about how the power is flowing through the grid
        - Smar grid techmologies offer a new solution to the problem of monitoring and controlling the grid's transmission system
        - Reducing the need to fire up costly secondary plants
        - Grid oerators can see and manage electricity consumption in real time
        - Software could ...
        ...
    Distribution Intelligence
        - It refers to the part of the Smart Grid that applies to the utility distribution System, that is the wires, switches. and transformers that connect the utility substation to you
        ...
    Plug-in Electric Vehicles
        - For the smart grid, plug-in electric behicles represent a broader technology know as energy storage
        - PVEs can drastically reduce our dependance on oil, and they emit now air pollutantis when running in all-electric models. Howe...

Smart Grid Components
    Smart Meters
        - Recognizes and details electrical consumption
        - Relays info to central monitoring station
        - Will replace traditional meters
        - Power outage notification and power quality monitoring
        ...
    Phasor Measurement
        - Measure AC current waveforms
        - Monitors power quality
        - Wide area measurement system
            - Provides real-time data
            ...
        ...
    Information Transfer
        - Two way communication
        - ...
    Distributed Generation
        - Allow the connection of small scale renewable genreation
            - Solar, wind, fuel cells, microturbines
        - Generation close to the load, improving efficiency
        - Customer interaction
        - Increased reliability

Smart Grid Benefits
    - Efficiency
    - Reliability
    - Environment

Drawbacks
    - Security and privacy
    - Some types of meters can be hacked, these hackers:
        - Gain control of thousand, even millions of meters
        ...
    ...




==========
2018-09-18
==========

Unsupervised Machine Learning Based Anomaly Detection in CPS

Anomaly Detection in CPS
    Anomally: a deviation from nominal behavior of a dynamic system
        - Nominal/off-nominal (anomalous) conditions
    Anomally in CPS:
        - eg physical faluts, cyber attacks
        - types: local, system wide
        - Problem: strong subsystems connectivity 
            -> vulnerable to catastrophic faults propagation
            -> efficiency? robustness? resilience?

Anomaly Detection Methods
    - Rule-based methods
        * rely on domain knowledge
        * need calibation & validation
        * example: temp & humi sensors at dew point
    - Data-driven methods (supervised)
        - lack of training data <- anomalies as low prob. events
        - information disparity in CPS:
            continuous(physical world) vs event-driven(cyber world)

Key Ideas
    Unsupervised Learning:
        - Using nominal data for training
    Symbolization:
        - representing different types of data uniformly
    RBM free energy distribution as determiner:
        - RBM: Restrict Boltzmann Machine
        - High Free energy -> lo probability -> anomaly
    Spato-temporal graphical modeling
        - Spatio-temporal pater network (STPN)
            (for capturing patterns of system-wide dynamic behaviors)

Model Explained
    Divided by two parts
        Training
            Accepts data of normal state
            2d matrix
            first? step symbolization
            third part, try to learn the pattern of how the system works normally
            Then break it down into samples
            compare the normal pattern with the subsequence(small bit)
            Then use this data as training results
        Testing
            Everytime we get a time series of the system
            Break down time series in to many subsequences
            Check the new subsequences to see how they fit

Symbolization /partitoning
    For a system of f - subsystems:
        input: system wide time series (under nominal condition if for training
        output: D-order Markov chain
        Methods: uniform partitioning (UP)

STPN model (W_D)
    Spatio-temporal pattern network (STPN)
        A set of 4-touple: For each pair of subsystems a,b <= F)
            Q^a: states set of a
            Epsilon^b: alphabet set of B

        Each node represents a subsystem
        Each edge represents a relationship
        
STPN Ex
    Has 2 subsystems
    Each symbol represents a state

Subsequences -> RBM Input
    Subsequence S~
        Subset of S in a given time window
    Process
        Compute each Lambda^(AB)(S~), for all a,b <+ F, through a model-inference process (omit)
        Normalize all results and convert to 1s and 0s, resulting in a binary vector of size f^2
        Taking this vector as a trining/test instance

Training RBM
    Restricted Boltzmann Machine (RBM)
    Training process: optimal weights, biases -> minimized free energy (maximized likelyhood of nominal conditions)

Finding an ANomaly (Testng phaze)
    Test data preparation
    Output as free energy distribution
    Kullback-Libler Distance (KL) is used for distinguished anomalies from nominal modes
        Distance(P,Q) = KL(P||Q)+KL(Q||P)...
        ...

Evaluation
    Left: lower free energy
    Right: higher free energy

Discussion
    Characteristics and performance
        Unsupervised training with nominal data
        spatio-temporal pattern for dynamic system behaviors
        supporting multiple nominal modes
        capturing both local and global anomalies
        supporting multiple types of data (Vital to CPS)
        robust to persistent anomalies (transient ones not tested)
    Further Research directons
        More complex learning technique eg stacked RBM
        root-caused analysis of anomalies
        detecting multiple simulataneous anomalies





Attack-Resilient Sensor Fusion for Safety-Critical CPS

Overview
    How a attacker can compromize a subset of these sensors
    algorithm that Combines data recieved 
    ...

Intro
    Ensuring saftey is important
    data comes from the shared bus to fusion algorithm and sent to the controller
    any of the nodes that interact with the environment can be compremized to send faulty data
    not just about sequental data, but also what time it's sent
    provide time slots to each of these modules
    Abstract
    Probabilistic
    Must ensure that the working sensors don't affect the faulty sensor
    Abstract model where each sensor provides interval of possible values
    Do not merge data with faulty data
    sensor provides controller with a single segment combine the values and take an average
    Precision gets hampered if the timeslot for fusion interval is too big
    
Precise formulations of the problems addressed in this work
    Increase systems durability to attacks

System Model
    Sensor is correct if its interval contains the true value

Fusion Algorithm
    input of the fusion intervals...
    If any fusion interval contains a faulty signal, a flag is thrown

Attack Model
    Attack Goals
        Land Shark
            unmanned drone vehicle
            possible to spoof some of the measurements without physical access to the vehicle
        RQ-170
            Captured in Iran
            captured through a jammed GPS signal, showing that sensor attacka are a valid threat for autonomous CPS
    Attack Means
        Phsycal Attaks
            Not always possible as sensors can be attached to other platforms and cannot be compramized without affecting critical components
        Cyber Attaks
            Not always possible b/c finding bugs in code or replacing the software require lots of effort
    Assumptions
        Number of compromised sensors is < n/2, and the number of sensors is greater than the # of compromised sensors
        Worse case scenairo, unlimited computation power
        Can't change the sensor interval, but can affect the fusion interval
        
Problems
    How does the order affect the performance of the attacker
    Make use of the past values and map it to the present values to protect against attack

Model of the attacker and present worst case results with respect to size of fusion intervals

Attack Strategies
    Constraint Stay undetected
        Passive mode: not yet transmitting data, limited impact
        Actice, no constraints on placement of intervals, great impact
    
    Begins in passive mode
    computes the intersection of all the seen measurements including his own compromised sensor, cannot say if he can affect other sensors
    When in passive, must include...
    Switch to active mode
    n is total number of sensors
    f is number of sensors that are under his attack
    number of transmitted info ...
    not constrained as long as the fusion interval overlaps
    Maximizing the size of the fusion interval to make more room for the faulty measurements

Worst case analysis (for the system, best case for the attacker)
    Attacking the biggest intervals does not change the worst case in the system
    Attacking the smallest interval can achieve the absolute worst


Comparison of effects of different communicaton schedules

Schedule comparison oand analysis
    whether its better to send through an ascending or decending schedule
    
Calculation method
    Taken a sensor system (3-5) the sensor length from 5-20 with increments of 3, and the number of attack sensors from 1-(n/2)
    From the table the expected frsion interval under the ascending schedule was never larger than that under descending.
    You can pick either schedule, doesn't matter for the attacker


Introducing system dynamics and benefits of the sue of measurement history

While using history
    Ignore measurements when we expect the sensor to be compromised
    3 ways to use past measurements
        map n
            all intervals from time t are mapped to time t+1 resulting in 2n intervals at time t+1 with 2f as the new bound on the number of corrupted
        map R and intersect
        pairwise intersect
            found to be most effecient


Combining effect of 2 methonds
    Taking the history as well as ascending schedule

Unified approach for attack-resilient sensor fusion
    ascending slightly better than descending (for landshark)


Performance of proposed sensor fusing approach using simulation...

Case Studies
    Landshark has 4 sensors to estimate speed, 2 wheel encoders, a GPS and a camera


When we apply it to real life, there is no way to make it less complex, when it's more complex its easier to attack
Sensors do get attacked, try to apply techniques so when it does get attacked, its not as impactful





==========
2018-09-21
==========

Guaranteed Physical Security with Restart-Based Design for Cyber Physical Systems

CPS and Security
    Increasingly connected to the internet
    Becoming more complex when leads to more vulnerabilities
    Common components are worth attacking because they are common and have low security

Cyber security vs Phsyical security
    Traditionally
        Very distinct
        cyber: stealing info
        Physical: destabilizing a helicopter
    Now
        Attacks on software can give you physical contro

Restart Based Security
    if you can turn it off and back on, you can reset it
    You want a time window to get the system's inertia, use the reseting and inertia to reset and move system back to working order

Spectrum of Physical Dynamic Speed

Safety Controller Fallback
    Operate
    System has sensor
    System has inertia
    Load in uncoruptable fix
    figure out when to reset the system to keep the system in operating range

Related work: Simplex Architectures and Variants
    Assumes that misbehaviour can only occur in a subset of software

Restarting as a Security
    Revival: Reactively restarting
    Rejuvination

System Model
    focus on embedded systems
    Adversaries can:
        Insert, listen, or modify messages between components
        Manipulate sensor inputs

Assumptions
    Software image integrity
        Its ok that this image has bugs
    Read only memory
        Unmodifiable
    Integrity of Root trust
    Sensor and actuator integrity
        They don't have physical access
        doesn't deal with if a 3rd party component is compromised
    External Hacks
        can use external interface to launch attacks
    Integrity Violations

Imporved defense from other attacks
    Side channel info leakage
    System level DoS
    Control Degradation

No improved defense on
    Man in the middle
    DoS network access denial attacks
    No safety guarentees if system can be jammed


Background

State Definations
    Admissible and inadmissible
        Good states, bad states
    Recoverable states
        Subset of admissible

Safety controller
    Use linear dynamics

Safety Constraints
    describe the boundaries of space

Computing Reachable States
    Determing reachable states in real time is har
    Use an alg that has a cap-able runtime to guarantee

Secure Execution intervals
    Time period when you know the attacker hasn't messed up your software yet
    Critical to calculate
        When to schedule restart time
        ...
    Asume that the state of the next SEI is something that the controller can bring back into admissble states
    Accomplished through
        Full system restarts
        Software reloads
    This ensures uncorrupted software is running

Safe Restart Times
    Assuming that the plane is flying, bad state is hitting ground
    Important to fugure out the reachable admissible state
        Don't want to restart and be int the ground

True Recoverable States
    States that the SC can push the system into the recoverable region
    Need to know how long it takes to stabilize the system

Checking Conditions
    Possible to check these conditions using real-time ...

Restart time algorithm
    extend the restart time until it reaches bad states, and reset it one step so you can self correct safely

System Operation Cycle Algorithm
    

Evaluation of methods
    3DOF helicopter
    Warehouse temp control

Controller Setup

Calculated Safe Restart Times for 3DOF Helicopter
    Space of states, red is bad, green is undamaged but not in a safe state, white through black is operational range and want to be in black

Impact on availability and control
    Is is available and controlable is important

Attacks and Behaviour
    Heli
        heli never crashed with the 3 attacks
    Warehouse


Discussion

Sutable applications and software difersification
    Areas
        Restart times are substantually less than physical dynamics times
        applications where potential damage is far more critical than reduced performance
    Software diversification
        Doesn't remove the ability to attack the system
        Change software on reboot to prevent attack?




Vulnerability of Transportation Networks to Traffic-Signal Tampering

Keywords 
    Transportation network: air transportation networks
    Attack resilience
    CPS: integrating software and physical
    Tampering attakc: uses wireless interfaces to tamper with traffic signals
    Traffic model: math model for road traffic

Introduction
    used to be standalone hardware devices
    evolved into a complex network system
    ensuring no attacks is impossible
    Need to consider the impact of sucessful attacks
    Assess vulnerability to network

Call Transmission model
    Uses Daganzo's cell transission model
    Road networks are divided into cells and time is divided into uniform intervals
    Each cell has 3 parameters
        Max vehicles in cell
        Max inflow/outflow of vehicles
        constant that quantifies how speed of traffic decreasess as cell become more...

Cell states
    change from time segment
    Ordinar cells
        one sucessor one predecessor
    Divergent cells
        Multiple sucessor, one predecessor
    Merging Cells
        One sucessor, multiple predecessor
    Source
        infinite capacity finite output
    Sink
        infinite capacity finite input

Attacker model
    can compromise some of the traffec signals and tamper with schedule or configuration
    Only accounts for short term scenarions

Attacker action space and goal
    Attacker only has a budgeted amout of cells that tye can target
    They would reconfiger the traffic signals at the selected cells
    Attacks must abide by hardware constraints
    Goal is to maximize the travel time

Network Vulnerability
    define the vulnerability of a transportation network to traffic signal tampering attacks
    A represents worse case scenarion
    T represents travel time
    Big part of determining vulnerability is the critical traffic signals which are more important than other signals
    Identifying these singlas is important because they have biggest impact on conjestion

Computational complexity
    Describes the attackers decision problem
    The attackers decision problem will have a solution only if the set cover problem has a solution

Heuristic Algorithm
    Attackers problem is NP-hard
    Finding subset, use a greedy heuristic algorithm
    Budget is now going to be less than the number of signalized intersections
    This allows us to compute T(A) for any attack A using a linear program
    runing time for this algorithm is upper bounded by the size of the transportation network

Numerical Results
    Compared to the heuristic algorithm with an exhaustive search algorithm
    exhaustive algorith is guarenteed to find a result
    Pretty similar with the budget is 1 or 2, heuristic is better for budget >2

Simulation results
    SUMO is a microsimulator that is widely used (Simulation of urban Mobility)
    4 scenarios
        Morning: outiside to inside
        Midday: between inside
        Afternoon: inside to outside
        Nighttime: random late night travel 

Simulation - Varying Budget
    Separated by ~1%
    run time 8h

Simulation - Varying travel times
    shows that the vulnerability can very between times
    
Related Work
    Vuln of traffic networks due to natural disasters
    Vulnerability of freeway control systems to attacks on the sensing and control infrastructure
    Identifying critical links and evaluating network performance
    Two player game to increase and combat traffic time

Future Work
    Understand what makes traffic signals an attractive target for attack
    Reconfigure traffic signals in a more resilient way
        therefore traffic congestion is minimal if an attack happens

Budget represents how many signals they can compromise at once




==========
2018-09-25
==========

Amy 
ZUbers against ZLyfts Apocalypse: An anal

Defn
    MaaS: Mobility-as-a-Service Describes a shift away from personally owned modes of transportation and towards mobility solutions that are consumed as a service (ex Uber, Lyft)

In 2016, Uber was hacked and personal info was stolen
Chief Security Officer was trying to conceal it

Cyber Security
    protection if internet-connected systems
    Can help prevent cyber attacks, data breaches, and identity theft

Main Ideas
    Framework for the study of cyber security in Maas systems
    A block coordinate descent algorithm to optimize attacks
    Applied to NYC taxi

The Approach
    created Queing-therotical framwork modeling the redispach process
    Analyze DoS cyber attacks by controlling cars maliciously through fake reservations (zombies) using an algorithm to derive optimal 

Queing-therotical framwork
    Custormer traveling model
    rebalancing model/ balancing mechanism
    Zombie model/ cyber security analysis
    
    i,j source,destination

Customer Travelling Model
    Customers arrice at each section i folling a time-invariant Poisson process with rate
    when they arrive, they can go to a destination where i is not the dest 
    assume no queue for customers, but there is a queue for taxi
    Travel times for passengers are independent and identically distributed

ReBalancer model
    Re-balancing vehicle: vehicle traveling from one dest without a customer, to fulfill the demand at its dest
    each section i generates balancers according to a Poisson process with rate
    i != j

Zombie Model
    Attacker can generate malicious zombies at each section i followin a Poisson process with rate
    j != i
    rebalancing policy does not detect the attacks
    definable radius r of an attack, furthest distence that a zombie can be routed
    attacker books a ride, then cancel it

The Network
    Total arival rate is the sum of the previous rates
    Single Server Node: solid sided nodes, not simultaneous
    Infinite Server node: dotted sidid nodes

Jackson Network Model

Optimal Attack Problems
    By minimizing the customers getting a vehicle
        in urban locations, it is impossible to do this, so try to limit vehicles in other areas 
    By minizing customer time usage
        More harmful because 
    Attack Routing problem
        attacker can only inject attacks with fixed rate
    Attacker Rate Problem
        with fixed routing i to j
        the attack rates are chosen to achieve objective
    Minimum attack problem

Application to NYC Taxi System
    Dataset of 1.1billion trips
    Data includes pickup and dropoff locations, trip time, and fare
    Divided midtown and downtown Manhattan into 531 square sections, each section servint a region 1-2 blocks wide
    Jackson Network
    75 million trips weekday 5-7 pm
    ....

    Minimal cost
    the concentration is greater because the radius is more accurate
    Price of attack is the cost penality when canceling a ride

The Outcome
    The graphs shows that $15 is the optimal charge for cancelations to protect from such attacks

Possible improvements for the study
    Not taking into account the high traffic bits of the city
    Balancing mech does not take into cosideration if the system is being attacked
    Could there be a possible defense mechinisim



Cole Boothman
An analsis Framework for DoS Attack on MaaS systems

Importance of Cyber security
    Since we store a lot of sensitive info, attacks can be really bad for us

Attacker Motives
    Data is very valuable (CC info)
    sell for financial gain
    Corporate espionage

DoS attacks
    target an network's or service's resource
    For MaaS systems, it means making cars unavailable for the customers

MaaS
    Provide travel and transportation services to customers

What this paper covers
    Studies the vulnerability of MaaS systems to cyber security attacks
    Queuing Therotical Framework for modeling MaaS dispatch process

Are MaaS systems vulenrable to cyber security attacks
    Lots of people use them
    Optimal number of cars in an area
    Not a lot of research done in the security of these systems

Summar of Queuing Therotical Model
    Cover customers who queue up at different locations for rides
    3 entities: Customers Balancers and Zombies
    Model simulates traveling from section to section

MaaS in an urban area
    Are is divided into N small sections
    M vehicles provide service between pairs of sections i and j
    Vehicles queue up and wait for passengers

Customers
    arive at section i with a random arrival rate
    they choose to travel from i to a different section j
    if no vehicle is available, customers leave
    Sum of i,j that exists in the set of all sections SxS | Routing(i,j) = 1 (or 100%)
    Travel times are independent, travel time is random within a certain range and customers don't affect each others travel time

Balancers
    System needs to accout for unususally high demand
    Balancers accout for this demand
    Arrive at section with a random arrival rate

Zombies (fake customers)
    Call a ride and then cancel it
    Arrive at a section i with a random rate
    choose to travel from i to j
    balancers do not detect zombies
    can only attac (be routed to) sections within an attack radius r

Notes about Entities
    Passenger loss is accurate, customers have demonstrated that they don't wait
    Entity arrival rates are all independent of each other, and can be combined into a single queue
    Not an attacker/defender game

Jackson Network
    Combine arival/routing for all entities to form a general arrival rate and generate routing probability
    Single Server Nodes (Section node) can only service one entity at a time
    Infinite server nodes (Route Node) can service unlimited entities in parallel
    Entity arribes at a section, if car available moves from section node to route node and spends the travel time at that node before arriving at destination node
    vehicles queue up at a section node and wait for entities to show up
    
Vehicle availability for Customers
    Quantity of concern for attacker
    As the fleet size increases, there are some sections with an availability of 1 (service right away), but some sections will have less than 1
    The balancing process helps account for this unfairness

Optimizing Attacks
    Wants to
        Minimizing the availability
        Perform attacks within a certain radius
        perform attacks at a rate that maximize objective within a budget b
    Optimize Attack Routing (Fixed Rate)
        attacks with a fixed optimal rate
        computes the optimal routes to achieve this
    Optimize attack rate (fixed routing)
        Which rate should I release the attacks
    Optimize budget of attacks (fixed availability)
        the attacker knows that they can reduce availability
        wants to minimize cost

Attack Experiments
    Controlling Vehicle Availabilities
        shown to work
        smaller radius makes it harder to control cars
    Minimizing Vehicle Availabilities
        Want to see the max damage we can cause to the company by minimizing
        Sections with higher availabilities are prioritized over lower availabilities
        Decreasing radius localizes attacks
    Cost Analysis from Jackson Network Simulations
    If MaaS wants to protect themselves, an increase of cancelation fees prevents loss
        $15 shown to be optimal cancelation fee

Improvements
    Factor in hagh congestion
    What could be done if the know about the zombie attacks
    Other types of DoS attacks by shutting down the mobile application and analyze implications
    What about other cities






==========
2018-09-28
==========

An Analysis Framework for DoS Attacks on MaaS Systems - Simon Shen

MaaS Systems have exponentially grown from 2013

How to protect the company against DoS attacks

Model the re-dispatch process
A potential cyber attack on this process

Re-dispatch process modeling
    attacker is us
    customers is represented the number of vehicles
    balancers are used to fix an excess of customers

Customer Modeling
    Divide a city into N small indexed sections
    Customer arival rate at city section i following a time-invariant poisson (random) process
    customer from section i choose random destination j with probability
    Travel time is an exponentially distributed random variable
    Customer do not queue and sufficient vehicle M to queue for passengers

Poisson Arrival and Property of Poisson process
    Consider random events such as the arrival of jobs at a job shot. the arrival of email to a mail server, the arrival fo boats to a doc, the arrival of calls to a cla center.
    The occurance of event is independent, but follows a certain rate lambda
    Random splitting: superpositon of poisson process A(lambda 1) and poisson process B(lambda 2) has a poisson...

Why exponential distribution
    assume customer from section i -> j, the travel time T_(ij) equal to the inter-arrival time of the next arrival in j

Rebalancing Modeling
    Balancer generating rate at city section ...

Cyber Security Modeling

Conver to Closed Jackson Network

Jackson Network?
    CUstomer arrives at a sectoin node following a poisson distribution
    customer picks another 

CLosed vs Open Jackosn netowkr
    if no additional customer enters and no customer leaving the network, the jackson network is closed
    We have the assumption to make it closed
        b/c we assume the number of vehicles and we assume the customers will never exceed M

Formulate objective in the Optical attack problem

System's state space
    in a closed jackson network
        M total num of states
        N total num of Customers
    Since sum is fixed
        We can determine the system stae by the M-1 tuple
    Jackson's theorem cannot be applied to closed networks because the queue length at a node in the closed network is limited by the poppulation of the network
    The Gordon-Newell theorem calculates the open network solution and then elimitantes the infeasible states by renormializing the probabilities
    G(M) is the nromalization constant associated to the equilibrium state distributed...
    G(M) is expensive the compute
    We instead learn the asymptotic availability
    Since the asymtotic availability is relative, we find the section (indexed k) where the relative ability is 1, and minimizing over the remaining availabilities:
        Wi is the user-defined arbitrary weights, depending on whether minizing the length of ride or the number of customers picked up

Attack budget (Optimization constraint)
    Attack budget is associated to the attack rate (zombie generation rate), when the system is balanced, we have
    We find that if the attacker have unlimited budget, we can make the remaining availabilities infinitely close to 0, To make the problem reasonable, we add the budget constraint
    We suppose the customer's and balancer's demands are given, and define their combined rates ....

Formulation of the Optical Attack Problem
    Non-convex and gradient has high complexity

Divide into 3 sub problems

Attack Routing Problem
    The attacker can only inject attacks with fixed rates
    Minimize the availability

Minimum attack problem
    Given a target of fixed positive...

Attack Rate Problem
    The attacker hacks the apps of the vehicles to display 'ghost' demands at specific sections...

First 2 solved by CPLEX
attack rate problem solved by...

Test and Evaluation
    The arrival rate is not balanced

Minimum Attack Problem
    "Cal," objective availabilities designated by the attacker
    First balance the network, by apply MAP once with uniform availability 1 at each section as....
    Arrows stands for routing directions
    Smaller attack range results in larger efforts for the attackers to redirect cars.

Relation between Radius and Rates in MAP
    When the radius increases, rated lower, but there is a point of diminishing returns

How much attack cost should be to prevent DoS on a MaaS system?
    




Vulnerability of Transport Networks to Traffic Signal Tampering - Kari Ewasechko

Evolution of Traffic Signals
    Standalone hardware devices -> complex networked systems
    Transitioned to cyber attacks
    Hardware based failsafes
        attacks can't cause accidents, but can affect scheduling

Issues
    Impossible to prevent attacks
    So assume attacks will occure
    Impossible to predict all attack in polynomial time
    Can secure all traffic signals in a system
    Solution, Heuristic Algorithm
        Identify critical signals
        and secure these signals

Daganzo's Cell Transmission Model
    Goal: Typical network congestion of an umcompromised system
    Time is divided into uniform intervals
    Road network is divided into cells
        5 types

Ordinary Cells
    Road segment that have one predicessor and one sucessor
    Assume driver's do not stop/slow down without reason

Diverging Cells
    Road segment that have one predicessor and multiple sucessors

Merging cells
    Road segment that have multiple predicessors and one sucessor
    
Signalized Intersections
    Merging cells with traffic signals
    Inflow proportion is updated

Sink Cells
    Infinite capacity

Source Cells
    Infinite capacity
    Finite output flows

Solving the Traffic Model
    
The Attacker Model
    Goal is to Maximize the total travel time of the system
    
Network Vulnerability
    We can calculate the vulnerability by using the previous two times
    A cell is critical if it is a signalize cell

The Attacker's Decision Problem
    Given a transportation network, a budgent B and a threshold travel time T*, determine if there exists an attack A satisfying the budget constraint such that ...

Computational Complexity
    Through proofs, we can say there is no polynomial time solution

Heuristic Algorithm
    Split into 2 parts
        Find subset of compromized cells
        Find the new worst case inflow proportions of these cells

Running time
    Upper bounded by polynomial function of the imput size

Future Work
    Algorithm to find resilient configurations efficiently
    Study Similarities between critical traffic signals




Attack Models and Scenarios for Networked Control Systems - Alex Rebalkin

Intro
    IT is important
    The use of non-proprietary communication networks are vulnerable to cyber attacks
    These attacks talk about both the cyber and the physical when talking about network control systems

Modeling
    Three Parts
        Physical plant and communications netowrks
        Feedback controller
        Anomaly detector

Physical plant 
    communications is assumed reliable

Feedback Controller
    The physical plant previously discudded is controlled...

Anomaly Detector
    Detects deviations for the nominal behaviour

Adversary Models
    K is the system knowledge possessed by the attacker and I k is the set of sensor and actuator data available
    The full aversary model is illustraded by the author

Disclosure Resorces
    Measurements that the attacker has aquired from the sensor data

Disruption Resources
    How an attack disturbs the system's operation
    Physcal Attack
        equivilent to fault signals
    Data Deception
        modify control actions and sesor measurements from calculate or real values
    DoS Attakcs

Attack Scenarios
    Talk about the genreal goal: impact system operation
    Likely choices of their attack policy

Quadruple-Tank Process
    Set up an experiment
        QTP lab
    Visuall demistrate system behaviour using four tanks of water

Replay Attack
    A network attack that gathers data and then replays it at another target to fool the system into believing legit data was recieved
    Hacker wants to steal water
    Attacker hacks one of the relay nodes
        can then replace the measurements sent to the controller with their own data

Replay Attack Results
    The sensors were not able to see this attack
    Successful

Bas Injection Attack
    Goal is to inject a constant bias without the system knowing
    No disclosure abilities are required
    We see the false bias was slowly injected using a first-order low-pass filter and a calculated steady-state value

Conclusions
    Authors analyzed the security and mapped possible attacks
    Showed attacks, more than ones presented




